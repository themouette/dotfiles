# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
# increase scrollback buffer size
set -g history-limit 50000
# tmux messages are displayed for 4 seconds
set -g display-time 4000
# Set 256-colour terminal
set -g default-terminal "screen-256color"
# Mode-keys style for copy mode
setw -g mode-keys vi
# Automatically set window title
setw -g automatic-rename on
# Start window count at 1
set -g base-index 1


# required (only) on OS X
# required (only) on OS X
if-shell '[ "$(platform)" == "Darwin" ] && [ command -v "reattach-to-user-namespace" >/dev/null 2>&1 ]' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'

# Use OS clipboard
# macOS system clipboard
if-shell '[ "$(platform)" == "Darwin" ] && [ command -v "pbcopy" >/dev/null 2>&1 ]' 'bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"'
if-shell '[ "$(platform)" == "Darwin" ] && [ command -v "pbcopy" >/dev/null 2>&1 ]' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"'
# Linux system clipboard
if-shell '[ "$(platform)" == "Linux" ] && [ command -v "xclip" >/dev/null 2>&1 ]' 'bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"'
if-shell '[ "$(platform)" == "Linux" ] && [ command -v "xclip" >/dev/null 2>&1 ]' 'bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"'

# THEME
# From https://github.com/brimtown/dotfiles/blob/master/.tmux.conf
set -g status-style fg="#d1d3d1",bg="#282A2E"
set -g window-status-current-style fg="#d1d3d1",bg="#373B41"
set -g window-status-style fg="#707880"
set -g window-status-format " #I: #W #F "
set -g window-status-current-format " #I: #W #F "
set -g window-style fg="#c5c8c6",bg="#282a2e"
set -g window-active-style fg="#d1d3d1",bg="#1D1F21"
set -g status-interval 5   # refresh 'status-left' and 'status-right' more often
set -g status-left-length 40
set -g status-left '#[fg=green](#S) #(whoami)@#H#[default]'
set -g status-right '#[fg=#707880]#(date)'
set -g pane-border-style fg="#5e5e5e",bg="#282A2E"
set -g pane-active-border-style fg="#d1d3d1",bg="#1D1F21"
# from https://zserge.com/posts/tmux/
set -g message-style fg=colour0,bg=colour3
set -g status-justify centre
set -g visual-activity on


# Use mouse to select pane
# set -g mouse-select-pane on
# Due to tmux BC in 2.1, replace with the following.
# see https://stackoverflow.com/questions/16055060/some-setting-of-tmux-doesnt-work
#setw -g mouse-select-window on
#setw -g mouse-select-pane on
# Disable mouse for now
#set -g mouse on
## scroll with mouse wheel
#bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
#bind -n WheelDownPane select-pane -t= \;                 send-keys -M
## Speed up scrolling with CTRL
#bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
#bind -t vi-copy    C-WheelUpPane   halfpage-up
#bind -t vi-copy    C-WheelDownPane halfpage-down
#bind -t emacs-copy C-WheelUpPane   halfpage-up
#bind -t emacs-copy C-WheelDownPane halfpage-down

# ?
set-option -gw xterm-keys on

# Shortcut taken from https://zserge.com/posts/tmux/
# - Mod+1..9: switch windows from 1 to 9
# - Mod+, and Mod+.: switch to next/prev windows
# - Mod+HJKL or arrows: switch between panes
# - Mod+N: create new window
# - Mod+f: toggle full-screen
# - Mod+v: split vertically
# - Mod+b: split horizontally (“bisect”)
# - Mod+x: close pane
# - Mod+/: enter copy and scroll mode
# - Mod+< and Mod+>: move current window to the left/right
# - Mod+Shift+HJKL or arrows: move pane to the left/right/up/down
# - Mod+Shift+X: close window
# - Mod+Shift+R: rename window
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0
bind-key -n M-. select-window -n
bind-key -n M-, select-window -p
bind-key -n M-< swap-window -t -1
bind-key -n M-> swap-window -t +1
bind-key -n M-X confirm-before "kill-window"
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-b split-window -v -c "#{pane_current_path}"
bind-key -n M-R command-prompt -I "" "rename-window '%%'"
bind-key -n M-f resize-pane -Z
# This is remaped
# bind-key -n M-h select-pane -L
# bind-key -n M-l select-pane -R
# bind-key -n M-k select-pane -U
# bind-key -n M-j select-pane -D
# bind-key -n M-Left select-pane -L
# bind-key -n M-Right select-pane -R
# bind-key -n M-Up select-pane -U
# bind-key -n M-Down select-pane -D
bind-key -n "M-H" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-J" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-K" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-L" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind-key -n "M-S-Left" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -L; tmux swap-pane -t $old'
bind-key -n "M-S-Down" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -D; tmux swap-pane -t $old'
bind-key -n "M-S-Up" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -U; tmux swap-pane -t $old'
bind-key -n "M-S-Right" run-shell 'old=`tmux display -p "#{pane_index}"`; tmux select-pane -R; tmux swap-pane -t $old'
bind-key -n M-x confirm-before "kill-pane"
bind-key -n M-/ copy-mode

# Smart pane switching with awareness of vim splits
# This lives with vim plugin 'christoomey/vim-tmux-navigator'
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


## Tmux Plugin Manager
#
# See https://github.com/tmux-plugins/tpm#tmux-plugin-manager
#
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# save vim sessions with tmux-resurect
# for vim
set -g @resurrect-strategy-vim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
