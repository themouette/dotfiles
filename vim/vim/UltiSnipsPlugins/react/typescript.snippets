snippet ir "Import React" b
import * as React from 'react';
endsnippet

snippet Component "React component (Typescript)" b
import * as React from 'react';

interface $1Props {
	/** Add an extra className to $1 wrapper */
	className?: string;
};
interface $1State {
	/**  */
	name?: string;
};

/**
 * $1 component
 */
export class ${1:`!p snip.rv = component_name(path)`} extends React.Component<$1Props, $1State> {
	static defaultProps = {};

	render() {
		return (
			${2:<p>Hello World</p>}$0
		);
	}
}
endsnippet

snippet "inte?r?f?a?c?e?" "description" !r
${1:export }interface ${2} {
	/** ${3:Add an extra className to component wrapper} */
	${4:className?}: ${5:string};
}
$0
endsnippet

snippet SFC "create a react SFC"
$2interface $1Props {
	/** Add an extra className to $1 wrapper */
	className?: string;
}

${2:export }const ${1:`!p snip.rv = component_name(path)`}: React.SFC<$1Props> = (props) => {
	return ${3:<div className={props.className}>Hello World</div>};
}
endsnippet

snippet tsldnl "disable tslint for next line" b
// tslint:disable-next-line${1::rule}
endsnippet
snippet tsldl "disable tslint for this line"
// tslint:disable-line${1::rule}
endsnippet

global !p
from react_snippets_helpers import *
endglobal
