#!/usr/bin/env bash

# Open GitHub page of Pull Request related to current branch
# based on https://gist.github.com/garno/b9e02113f638d928e2be0a76dbf5b8d1

set -o errexit
set -o pipefail
set -o nounset

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

urlencode() {
	python -c "import urllib, sys; print urllib.quote(sys.argv[1])" "$@"
}

################################################################################
# open_url description
# Globals:
#   None
# Arguments:
#   None
# Returns
#   None
################################################################################
function open_url {
    command -v open >/dev/null 2>&1 && {
        open "$@"
    }
    command -v xdg-open >/dev/null 2>&1 && {
        xdg-open "$@"
    }
}

################################################################################
# Program main function
# Globals:
#   None
# Arguments:
#   None
# Returns
#   None
################################################################################
function main {
	# Retrieve branch name
	branch="${1:-$(git rev-parse --abbrev-ref HEAD)}"

	# Retrieve target branch
	destination_branch=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')

	# Retrieve repository URL
	remote_url=$(git config --get remote.origin.url | sed -E 's/(https:\/\/|git@)([^\/:]*)(:|\/)([^.]*)(.git)?/\2/')
	repo=$(git config --get remote.origin.url | sed -E 's/(https:\/\/|git@)([^\/:]*)(:|\/)([^.]*)(.git)?/\4/')

	if [[ $remote_url == github* ]]; then
		pr_url=https://github.com/pulls?q=$(urlencode "is:pr sort:updated-desc repo:${repo} head:${branch}")
	else # Try gitlab format
		pr_url="https://$remote_url/$repo/merge_requests/new?merge_request%5Bsource_branch%5D=$branch&merge_request%5Btarget_branch%5D=$destination_branch"
	fi

	open_url "$pr_url"
}

main $@
